{
    "type": "object",
    "properties": {
        "poolId": {
            "required": true,
            "type": "string"
        },
        "timeout": {
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
        },
        "requestBody": {
            "properties": {
                "applicationPackageReferences": {
                    "description": "The list replaces any existing application package references on the pool. Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. If omitted, or if you specify an empty collection, any existing application packages references are removed from the pool.",
                    "items": {
                        "properties": {
                            "applicationId": {
                                "title": "The ID of the application to deploy.",
                                "type": "string"
                            },
                            "version": {
                                "description": "If this is omitted on a pool, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a task, and no default version is specified for this application, the task fails with a pre-processing error.",
                                "title": "The version of the application to deploy. If omitted, the default version is deployed.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "applicationId"
                        ],
                        "title": "A reference to an application package to be deployed to compute nodes.",
                        "type": "object"
                    },
                    "title": "A list of application packages to be installed on each compute node in the pool.",
                    "type": "array"
                },
                "certificateReferences": {
                    "description": "This list replaces any existing certificate references configured on the pool. If you specify an empty collection, any existing certificate references are removed from the pool. For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.",
                    "items": {
                        "properties": {
                            "storeLocation": {
                                "description": "The default value is currentuser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.",
                                "enum": [
                                    "currentuser",
                                    "localmachine"
                                ],
                                "title": "The location of the certificate store on the compute node into which to install the certificate.",
                                "type": "string",
                                "x-ms-enum": {
                                    "modelAsString": false,
                                    "name": "CertificateStoreLocation",
                                    "values": [
                                        {
                                            "description": "Certificates should be installed to the CurrentUser certificate store.",
                                            "name": "currentUser",
                                            "value": "currentuser"
                                        },
                                        {
                                            "description": "Certificates should be installed to the LocalMachine certificate store.",
                                            "name": "localMachine",
                                            "value": "localmachine"
                                        }
                                    ]
                                }
                            },
                            "storeName": {
                                "description": "This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.",
                                "title": "The name of the certificate store on the compute node into which to install the certificate.",
                                "type": "string"
                            },
                            "thumbprint": {
                                "title": "The thumbprint of the certificate.",
                                "type": "string"
                            },
                            "thumbprintAlgorithm": {
                                "title": "The algorithm with which the thumbprint is associated. This must be sha1.",
                                "type": "string"
                            },
                            "visibility": {
                                "description": "You can specify more than one visibility in this collection. The default is all accounts.",
                                "items": {
                                    "enum": [
                                        "starttask",
                                        "task",
                                        "remoteuser"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                        "modelAsString": false,
                                        "name": "CertificateVisibility",
                                        "values": [
                                            {
                                                "description": "The certificate should be visible to the user account under which the start task is run.",
                                                "name": "startTask",
                                                "value": "starttask"
                                            },
                                            {
                                                "description": "The certificate should be visible to the user accounts under which job tasks are run.",
                                                "value": "task"
                                            },
                                            {
                                                "description": "The certificate should be visible to the user accounts under which users remotely access the node.",
                                                "name": "remoteUser",
                                                "value": "remoteuser"
                                            }
                                        ]
                                    },
                                    "nullable": false
                                },
                                "title": "Which user accounts on the compute node should have access to the private data of the certificate.",
                                "type": "array"
                            }
                        },
                        "required": [
                            "thumbprint",
                            "thumbprintAlgorithm"
                        ],
                        "title": "A reference to a certificate to be installed on compute nodes in a pool.",
                        "type": "object"
                    },
                    "title": "A list of certificates to be installed on each compute node in the pool.",
                    "type": "array"
                },
                "metadata": {
                    "description": "This list replaces any existing metadata configured on the pool. If omitted, or if you specify an empty collection, any existing metadata is removed from the pool.",
                    "items": {
                        "description": "The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.",
                        "properties": {
                            "name": {
                                "title": "The name of the metadata item.",
                                "type": "string"
                            },
                            "value": {
                                "title": "The value of the metadata item.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "value"
                        ],
                        "title": "A name-value pair associated with a Batch service resource.",
                        "type": "object"
                    },
                    "title": "A list of name-value pairs associated with the pool as metadata.",
                    "type": "array"
                },
                "startTask": {
                    "description": "If this element is present, it overwrites any existing start task. If omitted, any existing start task is removed from the pool.",
                    "title": "A task to run on each compute node as it joins the pool. The task runs when the node is added to the pool or when the node is restarted.",
                    "properties": {
                        "commandLine": {
                            "description": "The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).",
                            "title": "The command line of the start task.",
                            "type": "string"
                        },
                        "containerSettings": {
                            "description": "When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.",
                            "title": "The settings for the container under which the start task runs.",
                            "properties": {
                                "containerRunOptions": {
                                    "description": "These additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service.",
                                    "title": "Additional options to the container create command.",
                                    "type": "string"
                                },
                                "imageName": {
                                    "description": "This is the full image reference, as would be specified to \"docker pull\". If no tag is provided as part of the image name, the tag \":latest\" is used as a default.",
                                    "title": "The image to use to create the container in which the task will run.",
                                    "type": "string"
                                },
                                "registry": {
                                    "description": "This setting can be omitted if was already provided at pool creation.",
                                    "title": "The private registry which contains the container image.",
                                    "properties": {
                                        "password": {
                                            "title": "The password to log into the registry server.",
                                            "type": "string"
                                        },
                                        "registryServer": {
                                            "description": "If omitted, the default is \"docker.io\".",
                                            "title": "The registry URL.",
                                            "type": "string"
                                        },
                                        "username": {
                                            "title": "The user name to log into the registry server.",
                                            "type": "string",
                                            "x-ms-client-name": "userName"
                                        }
                                    },
                                    "required": [
                                        "username",
                                        "password"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "imageName"
                            ],
                            "type": "object"
                        },
                        "environmentSettings": {
                            "items": {
                                "properties": {
                                    "name": {
                                        "title": "The name of the environment variable.",
                                        "type": "string"
                                    },
                                    "value": {
                                        "title": "The value of the environment variable.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "title": "An environment variable to be set on a task process.",
                                "type": "object"
                            },
                            "title": "A list of environment variable settings for the start task.",
                            "type": "array"
                        },
                        "maxTaskRetryCount": {
                            "description": "The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.",
                            "format": "int32",
                            "title": "The maximum number of times the task may be retried.",
                            "type": "integer"
                        },
                        "resourceFiles": {
                            "description": "Files listed under this element are located in the task's working directory.",
                            "items": {
                                "properties": {
                                    "blobSource": {
                                        "description": "This URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.",
                                        "title": "The URL of the file within Azure Blob Storage.",
                                        "type": "string"
                                    },
                                    "fileMode": {
                                        "description": "This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.",
                                        "title": "The file permission mode attribute in octal format.",
                                        "type": "string"
                                    },
                                    "filePath": {
                                        "title": "The location on the compute node to which to download the file, relative to the task's working directory.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "blobSource",
                                    "filePath"
                                ],
                                "title": "A file to be downloaded from Azure blob storage to a compute node.",
                                "type": "object"
                            },
                            "title": "A list of files that the Batch service will download to the compute node before running the command line.  There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
                            "type": "array"
                        },
                        "userIdentity": {
                            "description": "If omitted, the task runs as a non-administrative user unique to the task.",
                            "title": "The user identity under which the start task runs.",
                            "properties": {
                                "autoUser": {
                                    "description": "The userName and autoUser properties are mutually exclusive; you must specify one but not both.",
                                    "title": "The auto user under which the task is run.",
                                    "properties": {
                                        "elevationLevel": {
                                            "description": "The default value is nonAdmin.",
                                            "title": "The elevation level of the auto user.",
                                            "enum": [
                                                "nonadmin",
                                                "admin"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "ElevationLevel",
                                                "values": [
                                                    {
                                                        "description": "The user is a standard user without elevated access.",
                                                        "name": "nonAdmin",
                                                        "value": "nonadmin"
                                                    },
                                                    {
                                                        "description": "The user is a user with elevated access and operates with full Administrator permissions.",
                                                        "value": "admin"
                                                    }
                                                ]
                                            }
                                        },
                                        "scope": {
                                            "description": "The default value is task.",
                                            "enum": [
                                                "task",
                                                "pool"
                                            ],
                                            "title": "The scope for the auto user",
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "AutoUserScope",
                                                "values": [
                                                    {
                                                        "description": "Specifies that the service should create a new user for the task.",
                                                        "value": "task"
                                                    },
                                                    {
                                                        "description": "Specifies that the task runs as the common auto user account which is created on every node in a pool.",
                                                        "value": "pool"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                },
                                "username": {
                                    "description": "The userName and autoUser properties are mutually exclusive; you must specify one but not both.",
                                    "title": "The name of the user identity under which the task is run.",
                                    "type": "string",
                                    "x-ms-client-name": "userName"
                                }
                            },
                            "type": "object"
                        },
                        "waitForSuccess": {
                            "description": "If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and failure info details. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is false.",
                            "title": "Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.",
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "commandLine"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "certificateReferences",
                "metadata",
                "applicationPackageReferences"
            ],
            "title": "The set of changes to be made to a pool.",
            "type": "object"
        },
        "client_request_id": {
            "required": false,
            "type": "string",
            "format": "uuid"
        },
        "return_client_request_id": {
            "required": false,
            "type": "boolean",
            "default": false
        },
        "ocp_date": {
            "required": false,
            "type": "string",
            "format": "date-time-rfc1123"
        },
        "api_version": {
            "required": true,
            "type": "string"
        }
    }
}