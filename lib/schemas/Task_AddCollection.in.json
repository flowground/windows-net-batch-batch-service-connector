{
    "type": "object",
    "properties": {
        "jobId": {
            "required": true,
            "type": "string"
        },
        "timeout": {
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 30
        },
        "requestBody": {
            "properties": {
                "value": {
                    "description": "The total serialized size of this collection must be less than 1MB. If it is greater than 1MB (for example if each task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer tasks.",
                    "items": {
                        "description": "Batch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing.",
                        "properties": {
                            "affinityInfo": {
                                "title": "A locality hint that can be used by the Batch service to select a compute node on which to start the new task.",
                                "properties": {
                                    "affinityId": {
                                        "description": "You can pass the affinityId of a compute node to indicate that this task needs to run on that compute node. Note that this is just a soft affinity. If the target node is busy or unavailable at the time the task is scheduled, then the task will be scheduled elsewhere.",
                                        "title": "An opaque string representing the location of a compute node or a task that has run previously.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "affinityId"
                                ],
                                "type": "object"
                            },
                            "applicationPackageReferences": {
                                "description": "Application packages are downloaded and deployed to a shared directory, not the task working directory. Therefore, if a referenced package is already on the compute node, and is up to date, then it is not re-downloaded; the existing copy on the compute node is used. If a referenced application package cannot be installed, for example because the package has been deleted or because download failed, the task fails.",
                                "items": {
                                    "properties": {
                                        "applicationId": {
                                            "title": "The ID of the application to deploy.",
                                            "type": "string"
                                        },
                                        "version": {
                                            "description": "If this is omitted on a pool, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences and HTTP status code 409. If this is omitted on a task, and no default version is specified for this application, the task fails with a pre-processing error.",
                                            "title": "The version of the application to deploy. If omitted, the default version is deployed.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "applicationId"
                                    ],
                                    "title": "A reference to an application package to be deployed to compute nodes.",
                                    "type": "object"
                                },
                                "title": "A list of application packages that the Batch service will deploy to the compute node before running the command line.",
                                "type": "array"
                            },
                            "authenticationTokenSettings": {
                                "description": "If this property is set, the Batch service provides the task with an authentication token which can be used to authenticate Batch service operations without requiring an account access key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations that the task can carry out using the token depend on the settings. For example, a task can request job permissions in order to add other tasks to the job, or check the status of the job or of other tasks under the job.",
                                "title": "The settings for an authentication token that the task can use to perform Batch service operations.",
                                "properties": {
                                    "access": {
                                        "description": "The authentication token grants access to a limited set of Batch service operations. Currently the only supported value for the access property is 'job', which grants access to all operations related to the job which contains the task.",
                                        "items": {
                                            "enum": [
                                                "job"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                                "modelAsString": false,
                                                "name": "AccessScope",
                                                "values": [
                                                    {
                                                        "description": "Grants access to perform all operations on the job containing the task.",
                                                        "value": "job"
                                                    }
                                                ]
                                            },
                                            "nullable": false
                                        },
                                        "title": "The Batch resources to which the token grants access.",
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "commandLine": {
                                "description": "For multi-instance tasks, the command line is executed as the primary task, after the primary task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).",
                                "title": "The command line of the task.",
                                "type": "string"
                            },
                            "constraints": {
                                "description": "If you do not specify constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for the job, and the maxWallClockTime and retentionTime are infinite.",
                                "title": "The execution constraints that apply to this task.",
                                "properties": {
                                    "maxTaskRetryCount": {
                                        "description": "Note that this value specifically controls the number of retries for the task executable due to a nonzero exit code. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task after the first attempt. If the maximum retry count is -1, the Batch service retries the task without limit. Resource files and application packages are only downloaded again if the task is retried on a new compute node.",
                                        "format": "int32",
                                        "title": "The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.",
                                        "type": "integer"
                                    },
                                    "maxWallClockTime": {
                                        "description": "If this is not specified, there is no time limit on how long the task may run.",
                                        "format": "duration",
                                        "title": "The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.",
                                        "type": "string"
                                    },
                                    "retentionTime": {
                                        "description": "The default is infinite, i.e. the task directory will be retained until the compute node is removed or reimaged.",
                                        "format": "duration",
                                        "title": "The minimum time to retain the task directory on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the task directory and all its contents.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "containerSettings": {
                                "description": "If the pool that will run this task has containerConfiguration set, this must be set as well. If the pool that will run this task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are mapped into the container, all task environment variables are mapped into the container, and the task command line is executed in the container.",
                                "title": "The settings for the container under which the task runs.",
                                "properties": {
                                    "containerRunOptions": {
                                        "description": "These additional options are supplied as arguments to the \"docker create\" command, in addition to those controlled by the Batch Service.",
                                        "title": "Additional options to the container create command.",
                                        "type": "string"
                                    },
                                    "imageName": {
                                        "description": "This is the full image reference, as would be specified to \"docker pull\". If no tag is provided as part of the image name, the tag \":latest\" is used as a default.",
                                        "title": "The image to use to create the container in which the task will run.",
                                        "type": "string"
                                    },
                                    "registry": {
                                        "description": "This setting can be omitted if was already provided at pool creation.",
                                        "title": "The private registry which contains the container image.",
                                        "properties": {
                                            "password": {
                                                "title": "The password to log into the registry server.",
                                                "type": "string"
                                            },
                                            "registryServer": {
                                                "description": "If omitted, the default is \"docker.io\".",
                                                "title": "The registry URL.",
                                                "type": "string"
                                            },
                                            "username": {
                                                "title": "The user name to log into the registry server.",
                                                "type": "string",
                                                "x-ms-client-name": "userName"
                                            }
                                        },
                                        "required": [
                                            "username",
                                            "password"
                                        ],
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "imageName"
                                ],
                                "type": "object"
                            },
                            "dependsOn": {
                                "description": "This task will not be scheduled until all tasks that it depends on have completed successfully. If any of those tasks fail and exhaust their retry counts, this task will never be scheduled. If the job does not have usesTaskDependencies set to true, and this element is present, the request fails with error code TaskDependenciesNotSpecifiedOnJob.",
                                "title": "The tasks that this task depends on.",
                                "properties": {
                                    "taskIdRanges": {
                                        "items": {
                                            "description": "The start and end of the range are inclusive. For example, if a range has start 9 and end 12, then it represents tasks '9', '10', '11' and '12'.",
                                            "properties": {
                                                "end": {
                                                    "format": "int32",
                                                    "title": "The last task ID in the range.",
                                                    "type": "integer"
                                                },
                                                "start": {
                                                    "format": "int32",
                                                    "title": "The first task ID in the range.",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "start",
                                                "end"
                                            ],
                                            "title": "A range of task IDs that a task can depend on. All tasks with IDs in the range must complete successfully before the dependent task can be scheduled.",
                                            "type": "object"
                                        },
                                        "title": "The list of task ID ranges that this task depends on. All tasks in all ranges must complete successfully before the dependent task can be scheduled.",
                                        "type": "array"
                                    },
                                    "taskIds": {
                                        "description": "The taskIds collection is limited to 64000 characters total (i.e. the combined length of all task IDs). If the taskIds collection exceeds the maximum length, the Add Task request fails with error code TaskDependencyListTooLong. In this case consider using task ID ranges instead.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "title": "The list of task IDs that this task depends on. All tasks in this list must complete successfully before the dependent task can be scheduled.",
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            },
                            "displayName": {
                                "description": "The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.",
                                "title": "A display name for the task.",
                                "type": "string"
                            },
                            "environmentSettings": {
                                "items": {
                                    "properties": {
                                        "name": {
                                            "title": "The name of the environment variable.",
                                            "type": "string"
                                        },
                                        "value": {
                                            "title": "The value of the environment variable.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "name"
                                    ],
                                    "title": "An environment variable to be set on a task process.",
                                    "type": "object"
                                },
                                "title": "A list of environment variable settings for the task.",
                                "type": "array"
                            },
                            "exitConditions": {
                                "description": "How the Batch service should respond when the task completes.",
                                "properties": {
                                    "default": {
                                        "description": "This value is used if the task exits with any nonzero exit code not listed in the exitCodes or exitCodeRanges collection, with a pre-processing error if the preProcessingError property is not present, or with a file upload error if the fileUploadError property is not present. If you want non-default behavior on exit code 0, you must list it explicitly using the exitCodes or exitCodeRanges collection.",
                                        "title": "How the Batch service should respond if the task fails with an exit condition not covered by any of the other properties.",
                                        "properties": {
                                            "dependencyAction": {
                                                "description": "The default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400  (Bad Request).",
                                                "enum": [
                                                    "satisfy",
                                                    "block"
                                                ],
                                                "title": "An action that the Batch service performs on tasks that depend on this task.",
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "DependencyAction",
                                                    "values": [
                                                        {
                                                            "description": "Satisfy the task's dependencies.",
                                                            "value": "satisfy"
                                                        },
                                                        {
                                                            "description": "Block the task's dependencies.",
                                                            "value": "block"
                                                        }
                                                    ]
                                                }
                                            },
                                            "jobAction": {
                                                "description": "The default is none for exit code 0 and terminate for all other exit conditions. If the job's onTaskFailed property is noAction, then specifying this property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
                                                "enum": [
                                                    "none",
                                                    "disable",
                                                    "terminate"
                                                ],
                                                "title": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's onTaskFailed property is 'performExitOptionsJobAction'.",
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "JobAction",
                                                    "values": [
                                                        {
                                                            "description": "Take no action.",
                                                            "value": "none"
                                                        },
                                                        {
                                                            "description": "Disable the job. This is equivalent to calling the disable job API, with a disableTasks value of requeue.",
                                                            "value": "disable"
                                                        },
                                                        {
                                                            "description": "Terminate the job. The terminateReason in the job's executionInfo is set to \"TaskFailed\".",
                                                            "value": "terminate"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "exitCodeRanges": {
                                        "items": {
                                            "properties": {
                                                "end": {
                                                    "format": "int32",
                                                    "title": "The last exit code in the range.",
                                                    "type": "integer"
                                                },
                                                "exitOptions": {
                                                    "title": "How the Batch service should respond if the task exits with an exit code in the range start to end (inclusive).",
                                                    "properties": {
                                                        "dependencyAction": {
                                                            "description": "The default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400  (Bad Request).",
                                                            "enum": [
                                                                "satisfy",
                                                                "block"
                                                            ],
                                                            "title": "An action that the Batch service performs on tasks that depend on this task.",
                                                            "type": "string",
                                                            "x-ms-enum": {
                                                                "modelAsString": false,
                                                                "name": "DependencyAction",
                                                                "values": [
                                                                    {
                                                                        "description": "Satisfy the task's dependencies.",
                                                                        "value": "satisfy"
                                                                    },
                                                                    {
                                                                        "description": "Block the task's dependencies.",
                                                                        "value": "block"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "jobAction": {
                                                            "description": "The default is none for exit code 0 and terminate for all other exit conditions. If the job's onTaskFailed property is noAction, then specifying this property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
                                                            "enum": [
                                                                "none",
                                                                "disable",
                                                                "terminate"
                                                            ],
                                                            "title": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's onTaskFailed property is 'performExitOptionsJobAction'.",
                                                            "type": "string",
                                                            "x-ms-enum": {
                                                                "modelAsString": false,
                                                                "name": "JobAction",
                                                                "values": [
                                                                    {
                                                                        "description": "Take no action.",
                                                                        "value": "none"
                                                                    },
                                                                    {
                                                                        "description": "Disable the job. This is equivalent to calling the disable job API, with a disableTasks value of requeue.",
                                                                        "value": "disable"
                                                                    },
                                                                    {
                                                                        "description": "Terminate the job. The terminateReason in the job's executionInfo is set to \"TaskFailed\".",
                                                                        "value": "terminate"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "start": {
                                                    "format": "int32",
                                                    "title": "The first exit code in the range.",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "start",
                                                "end",
                                                "exitOptions"
                                            ],
                                            "title": "A range of exit codes and how the Batch service should respond to exit codes within that range.",
                                            "type": "object"
                                        },
                                        "title": "A list of task exit code ranges and how the Batch service should respond to them.",
                                        "type": "array"
                                    },
                                    "exitCodes": {
                                        "items": {
                                            "properties": {
                                                "code": {
                                                    "format": "int32",
                                                    "title": "A process exit code.",
                                                    "type": "integer"
                                                },
                                                "exitOptions": {
                                                    "title": "How the Batch service should respond if the task exits with this exit code.",
                                                    "properties": {
                                                        "dependencyAction": {
                                                            "description": "The default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400  (Bad Request).",
                                                            "enum": [
                                                                "satisfy",
                                                                "block"
                                                            ],
                                                            "title": "An action that the Batch service performs on tasks that depend on this task.",
                                                            "type": "string",
                                                            "x-ms-enum": {
                                                                "modelAsString": false,
                                                                "name": "DependencyAction",
                                                                "values": [
                                                                    {
                                                                        "description": "Satisfy the task's dependencies.",
                                                                        "value": "satisfy"
                                                                    },
                                                                    {
                                                                        "description": "Block the task's dependencies.",
                                                                        "value": "block"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "jobAction": {
                                                            "description": "The default is none for exit code 0 and terminate for all other exit conditions. If the job's onTaskFailed property is noAction, then specifying this property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
                                                            "enum": [
                                                                "none",
                                                                "disable",
                                                                "terminate"
                                                            ],
                                                            "title": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's onTaskFailed property is 'performExitOptionsJobAction'.",
                                                            "type": "string",
                                                            "x-ms-enum": {
                                                                "modelAsString": false,
                                                                "name": "JobAction",
                                                                "values": [
                                                                    {
                                                                        "description": "Take no action.",
                                                                        "value": "none"
                                                                    },
                                                                    {
                                                                        "description": "Disable the job. This is equivalent to calling the disable job API, with a disableTasks value of requeue.",
                                                                        "value": "disable"
                                                                    },
                                                                    {
                                                                        "description": "Terminate the job. The terminateReason in the job's executionInfo is set to \"TaskFailed\".",
                                                                        "value": "terminate"
                                                                    }
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "code",
                                                "exitOptions"
                                            ],
                                            "title": "How the Batch service should respond if a task exits with a particular exit code.",
                                            "type": "object"
                                        },
                                        "title": "A list of individual task exit codes and how the Batch service should respond to them.",
                                        "type": "array"
                                    },
                                    "fileUploadError": {
                                        "description": "If the task exited with an exit code that was specified via exitCodes or exitCodeRanges, and then encountered a file upload error, then the action specified by the exit code takes precedence.",
                                        "title": "How the Batch service should respond if a file upload error occurs.",
                                        "properties": {
                                            "dependencyAction": {
                                                "description": "The default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400  (Bad Request).",
                                                "enum": [
                                                    "satisfy",
                                                    "block"
                                                ],
                                                "title": "An action that the Batch service performs on tasks that depend on this task.",
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "DependencyAction",
                                                    "values": [
                                                        {
                                                            "description": "Satisfy the task's dependencies.",
                                                            "value": "satisfy"
                                                        },
                                                        {
                                                            "description": "Block the task's dependencies.",
                                                            "value": "block"
                                                        }
                                                    ]
                                                }
                                            },
                                            "jobAction": {
                                                "description": "The default is none for exit code 0 and terminate for all other exit conditions. If the job's onTaskFailed property is noAction, then specifying this property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
                                                "enum": [
                                                    "none",
                                                    "disable",
                                                    "terminate"
                                                ],
                                                "title": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's onTaskFailed property is 'performExitOptionsJobAction'.",
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "JobAction",
                                                    "values": [
                                                        {
                                                            "description": "Take no action.",
                                                            "value": "none"
                                                        },
                                                        {
                                                            "description": "Disable the job. This is equivalent to calling the disable job API, with a disableTasks value of requeue.",
                                                            "value": "disable"
                                                        },
                                                        {
                                                            "description": "Terminate the job. The terminateReason in the job's executionInfo is set to \"TaskFailed\".",
                                                            "value": "terminate"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "preProcessingError": {
                                        "title": "How the Batch service should respond if the task fails to start due to an error.",
                                        "properties": {
                                            "dependencyAction": {
                                                "description": "The default is 'satisfy' for exit code 0, and 'block' for all other exit conditions. If the job's usesTaskDependencies property is set to false, then specifying the dependencyAction property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400  (Bad Request).",
                                                "enum": [
                                                    "satisfy",
                                                    "block"
                                                ],
                                                "title": "An action that the Batch service performs on tasks that depend on this task.",
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "DependencyAction",
                                                    "values": [
                                                        {
                                                            "description": "Satisfy the task's dependencies.",
                                                            "value": "satisfy"
                                                        },
                                                        {
                                                            "description": "Block the task's dependencies.",
                                                            "value": "block"
                                                        }
                                                    ]
                                                }
                                            },
                                            "jobAction": {
                                                "description": "The default is none for exit code 0 and terminate for all other exit conditions. If the job's onTaskFailed property is noAction, then specifying this property returns an error and the add task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).",
                                                "enum": [
                                                    "none",
                                                    "disable",
                                                    "terminate"
                                                ],
                                                "title": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's onTaskFailed property is 'performExitOptionsJobAction'.",
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "JobAction",
                                                    "values": [
                                                        {
                                                            "description": "Take no action.",
                                                            "value": "none"
                                                        },
                                                        {
                                                            "description": "Disable the job. This is equivalent to calling the disable job API, with a disableTasks value of requeue.",
                                                            "value": "disable"
                                                        },
                                                        {
                                                            "description": "Terminate the job. The terminateReason in the job's executionInfo is set to \"TaskFailed\".",
                                                            "value": "terminate"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "title": "Specifies how the Batch service should respond when the task completes.",
                                "type": "object"
                            },
                            "id": {
                                "description": "The ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within a job that differ only by case).",
                                "title": "A string that uniquely identifies the task within the job.",
                                "type": "string"
                            },
                            "multiInstanceSettings": {
                                "title": "An object that indicates that the task is a multi-instance task, and contains information about how to run the multi-instance task.",
                                "description": "Multi-instance tasks are commonly used to support MPI tasks.",
                                "properties": {
                                    "commonResourceFiles": {
                                        "description": "The difference between common resource files and task resource files is that common resource files are downloaded for all subtasks including the primary, whereas task resource files are downloaded only for the primary. Also note that these resource files are not downloaded to the task working directory, but instead are downloaded to the task root directory (one directory above the working directory).  There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
                                        "items": {
                                            "properties": {
                                                "blobSource": {
                                                    "description": "This URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.",
                                                    "title": "The URL of the file within Azure Blob Storage.",
                                                    "type": "string"
                                                },
                                                "fileMode": {
                                                    "description": "This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.",
                                                    "title": "The file permission mode attribute in octal format.",
                                                    "type": "string"
                                                },
                                                "filePath": {
                                                    "title": "The location on the compute node to which to download the file, relative to the task's working directory.",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "blobSource",
                                                "filePath"
                                            ],
                                            "title": "A file to be downloaded from Azure blob storage to a compute node.",
                                            "type": "object"
                                        },
                                        "title": "A list of files that the Batch service will download before running the coordination command line.",
                                        "type": "array"
                                    },
                                    "coordinationCommandLine": {
                                        "description": "A typical coordination command line launches a background service and verifies that the service is ready to process inter-node messages.",
                                        "title": "The command line to run on all the compute nodes to enable them to coordinate when the primary runs the main task command.",
                                        "type": "string"
                                    },
                                    "numberOfInstances": {
                                        "description": "If omitted, the default is 1.",
                                        "format": "int32",
                                        "title": "The number of compute nodes required by the task.",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "coordinationCommandLine"
                                ],
                                "type": "object"
                            },
                            "outputFiles": {
                                "description": "For multi-instance tasks, the files will only be uploaded from the compute node on which the primary task is executed.",
                                "items": {
                                    "properties": {
                                        "destination": {
                                            "title": "The destination for the output file(s).",
                                            "properties": {
                                                "container": {
                                                    "title": "A location in Azure blob storage to which files are uploaded.",
                                                    "properties": {
                                                        "containerUrl": {
                                                            "description": "The URL must include a Shared Access Signature (SAS) granting write permissions to the container.",
                                                            "title": "The URL of the container within Azure Blob Storage to which to upload the file(s).",
                                                            "type": "string"
                                                        },
                                                        "path": {
                                                            "description": "If filePattern refers to a specific file (i.e. contains no wildcards), then path is the name of the blob to which to upload that file. If filePattern contains one or more wildcards (and therefore may match multiple files), then path is the name of the blob virtual directory (which is prepended to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded to the root of the container with a blob name matching their file name.",
                                                            "title": "The destination blob or virtual directory within the Azure Storage container.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "containerUrl"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "filePattern": {
                                            "description": "Both relative and absolute paths are supported. Relative paths are relative to the task working directory. The following wildcards are supported: * matches 0 or more characters (for example pattern abc* would match abc or abcdef), ** matches any directory, ? matches any single character, [abc] matches one character in the brackets, and [a-c] matches one character in the range. Brackets can include a negation to match any character not specified (for example [!abc] matches any character but a, b, or c). If a file name starts with \".\" it is ignored by default but may be matched by specifying it explicitly (for example *.gif will not match .a.gif, but .*.gif will). A simple example: **\\*.txt matches any file that does not start in '.' and ends with .txt in the task working directory or any subdirectory. If the filename contains a wildcard character it can be escaped using brackets (for example abc[*] would match a file named abc*). Note that both \\ and / are treated as directory separators on Windows, but only / is on Linux. Environment variables (%var% on Windows or $var on Linux) are expanded prior to the pattern being applied.",
                                            "title": "A pattern indicating which file(s) to upload.",
                                            "type": "string"
                                        },
                                        "uploadOptions": {
                                            "title": "Additional options for the upload operation, including under what conditions to perform the upload.",
                                            "properties": {
                                                "uploadCondition": {
                                                    "description": "The default is taskcompletion.",
                                                    "title": "The conditions under which the task output file or set of files should be uploaded.",
                                                    "enum": [
                                                        "tasksuccess",
                                                        "taskfailure",
                                                        "taskcompletion"
                                                    ],
                                                    "type": "string",
                                                    "x-ms-enum": {
                                                        "modelAsString": false,
                                                        "name": "OutputFileUploadCondition",
                                                        "values": [
                                                            {
                                                                "description": "Upload the file(s) only after the task process exits with an exit code of 0.",
                                                                "name": "taskSuccess",
                                                                "value": "tasksuccess"
                                                            },
                                                            {
                                                                "description": "Upload the file(s) only after the task process exits with a nonzero exit code.",
                                                                "name": "taskFailure",
                                                                "value": "taskfailure"
                                                            },
                                                            {
                                                                "description": "Upload the file(s) after the task process exits, no matter what the exit code was.",
                                                                "name": "taskCompletion",
                                                                "value": "taskcompletion"
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            "required": [
                                                "uploadCondition"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    "required": [
                                        "filePattern",
                                        "destination",
                                        "uploadOptions"
                                    ],
                                    "title": "A specification for uploading files from an Azure Batch node to another location after the Batch service has finished executing the task process.",
                                    "type": "object"
                                },
                                "title": "A list of files that the Batch service will upload from the compute node after running the command line.",
                                "type": "array"
                            },
                            "resourceFiles": {
                                "description": "For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary task is executed. There is a maximum size for the list of resource files.  When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.",
                                "items": {
                                    "properties": {
                                        "blobSource": {
                                            "description": "This URL must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.",
                                            "title": "The URL of the file within Azure Blob Storage.",
                                            "type": "string"
                                        },
                                        "fileMode": {
                                            "description": "This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.",
                                            "title": "The file permission mode attribute in octal format.",
                                            "type": "string"
                                        },
                                        "filePath": {
                                            "title": "The location on the compute node to which to download the file, relative to the task's working directory.",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "blobSource",
                                        "filePath"
                                    ],
                                    "title": "A file to be downloaded from Azure blob storage to a compute node.",
                                    "type": "object"
                                },
                                "title": "A list of files that the Batch service will download to the compute node before running the command line.",
                                "type": "array"
                            },
                            "userIdentity": {
                                "description": "If omitted, the task runs as a non-administrative user unique to the task.",
                                "title": "The user identity under which the task runs.",
                                "properties": {
                                    "autoUser": {
                                        "description": "The userName and autoUser properties are mutually exclusive; you must specify one but not both.",
                                        "title": "The auto user under which the task is run.",
                                        "properties": {
                                            "elevationLevel": {
                                                "description": "The default value is nonAdmin.",
                                                "title": "The elevation level of the auto user.",
                                                "enum": [
                                                    "nonadmin",
                                                    "admin"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "ElevationLevel",
                                                    "values": [
                                                        {
                                                            "description": "The user is a standard user without elevated access.",
                                                            "name": "nonAdmin",
                                                            "value": "nonadmin"
                                                        },
                                                        {
                                                            "description": "The user is a user with elevated access and operates with full Administrator permissions.",
                                                            "value": "admin"
                                                        }
                                                    ]
                                                }
                                            },
                                            "scope": {
                                                "description": "The default value is task.",
                                                "enum": [
                                                    "task",
                                                    "pool"
                                                ],
                                                "title": "The scope for the auto user",
                                                "type": "string",
                                                "x-ms-enum": {
                                                    "modelAsString": false,
                                                    "name": "AutoUserScope",
                                                    "values": [
                                                        {
                                                            "description": "Specifies that the service should create a new user for the task.",
                                                            "value": "task"
                                                        },
                                                        {
                                                            "description": "Specifies that the task runs as the common auto user account which is created on every node in a pool.",
                                                            "value": "pool"
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "username": {
                                        "description": "The userName and autoUser properties are mutually exclusive; you must specify one but not both.",
                                        "title": "The name of the user identity under which the task is run.",
                                        "type": "string",
                                        "x-ms-client-name": "userName"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "id",
                            "commandLine"
                        ],
                        "title": "An Azure Batch task to add.",
                        "type": "object"
                    },
                    "maxItems": 100,
                    "title": "The collection of tasks to add. The maximum count of tasks is 100.",
                    "type": "array"
                }
            },
            "required": [
                "value"
            ],
            "title": "A collection of Azure Batch tasks to add.",
            "type": "object"
        },
        "client_request_id": {
            "required": false,
            "type": "string",
            "format": "uuid"
        },
        "return_client_request_id": {
            "required": false,
            "type": "boolean",
            "default": false
        },
        "ocp_date": {
            "required": false,
            "type": "string",
            "format": "date-time-rfc1123"
        },
        "api_version": {
            "required": true,
            "type": "string"
        }
    }
}